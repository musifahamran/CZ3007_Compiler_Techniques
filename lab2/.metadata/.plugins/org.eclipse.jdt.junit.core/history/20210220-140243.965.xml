<?xml version="1.0" encoding="UTF-8"?><testrun name="ParserTests" project="Lab2" tests="28" started="28" failures="3" errors="0" ignored="0">
  <testsuite name="test.ParserTests" time="0.06">
    <testcase name="testModuleWithModuleDeclarations_FunctionDeclaration_BreakStatement" classname="test.ParserTests" time="0.01"/>
    <testcase name="testModuleWithModuleDeclarations_FunctionDeclaration_WhileStatement" classname="test.ParserTests" time="0.001"/>
    <testcase name="testModuleWithImports" classname="test.ParserTests" time="0.0"/>
    <testcase name="testTerm" classname="test.ParserTests" time="0.001"/>
    <testcase name="testRHSAssignment" classname="test.ParserTests" time="0.0"/>
    <testcase name="testBlockStatement" classname="test.ParserTests" time="0.001"/>
    <testcase name="testBreakStatement" classname="test.ParserTests" time="0.0"/>
    <testcase name="testWhileStatement" classname="test.ParserTests" time="0.0"/>
    <testcase name="testReturnStatement" classname="test.ParserTests" time="0.001"/>
    <testcase name="testArithmeticExpression" classname="test.ParserTests" time="0.0"/>
    <testcase name="testModuleWithModuleDeclarations_FieldDeclaration" classname="test.ParserTests" time="0.001"/>
    <testcase name="testLocalVariableDeclaration" classname="test.ParserTests" time="0.0"/>
    <testcase name="testAssignment" classname="test.ParserTests" time="0.001"/>
    <testcase name="testEmptyModule" classname="test.ParserTests" time="0.0"/>
    <testcase name="testModuleWithModuleDeclarations_FunctionDeclaration_ExpressionStatement" classname="test.ParserTests" time="0.025">
      <failure>java.lang.AssertionError: Test was supposed to fail, but succeeded&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.ParserTests.runtest(ParserTests.java:32)&#13;
	at test.ParserTests.testModuleWithModuleDeclarations_FunctionDeclaration_ExpressionStatement(ParserTests.java:160)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testArrayExpression" classname="test.ParserTests" time="0.001"/>
    <testcase name="testModuleWithModuleDeclarations_FunctionDeclaration_LocalVariable" classname="test.ParserTests" time="0.001"/>
    <testcase name="testParenthesisExpression" classname="test.ParserTests" time="0.001"/>
    <testcase name="testFunctionCall" classname="test.ParserTests" time="0.0"/>
    <testcase name="testIfStatement" classname="test.ParserTests" time="0.001"/>
    <testcase name="testModuleWithModuleDeclarations_FunctionDeclaration_ReturnStatement" classname="test.ParserTests" time="0.003">
      <failure>java.lang.AssertionError: Test was supposed to fail, but succeeded&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.ParserTests.runtest(ParserTests.java:32)&#13;
	at test.ParserTests.testModuleWithModuleDeclarations_FunctionDeclaration_ReturnStatement(ParserTests.java:141)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testModuleWithModuleDeclarations_FunctionDeclaration_EmptyStatement" classname="test.ParserTests" time="0.004">
      <failure>java.lang.AssertionError: Test was supposed to fail, but succeeded&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.ParserTests.runtest(ParserTests.java:32)&#13;
	at test.ParserTests.testModuleWithModuleDeclarations_FunctionDeclaration_EmptyStatement(ParserTests.java:88)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testModuleWithModuleDeclarations_Function_Declaration_IfStatement" classname="test.ParserTests" time="0.002"/>
    <testcase name="testFactor" classname="test.ParserTests" time="0.001"/>
    <testcase name="testModuleWithInvalidImports" classname="test.ParserTests" time="0.001"/>
    <testcase name="testExpressionStatement" classname="test.ParserTests" time="0.0"/>
    <testcase name="testBooleanLiteral" classname="test.ParserTests" time="0.001"/>
    <testcase name="testModuleWithModuleDeclarations_TypeDeclaration" classname="test.ParserTests" time="0.001"/>
  </testsuite>
</testrun>
